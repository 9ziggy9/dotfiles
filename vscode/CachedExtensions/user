{"input":{"ourVersion":"1.57.1","ourProductDate":"2021-06-18T22:04:57.634Z","locale":"en","devMode":false,"absoluteFolderPath":"/home/ziggy/.vscode-oss/extensions","isBuiltin":false,"isUnderDevelopment":false,"translations":{},"mtime":1624671464213},"result":[{"name":"gruvbox","displayName":"Gruvbox Theme","description":"Gruvbox Theme","version":"1.5.0","author":"jdinhify (https://github.com/jdinhify)","contributors":["eximus (https://github.com/3ximus)","Josh Addington (https://github.com/JoshAddington)","michaelboulton (https://github.com/michaelboulton)","Michell Stuttgart (https://github.com/mstuttgart)","sedmicha (https://github.com/sedmicha)","Layo (https://github.com/layoaster)","Maxim Tsoy (https://github.com/muodov)","Huip van den Ende (https://github.com/huipvandenende)"],"publisher":"jdinhlife","engines":{"vscode":"^1.40.1"},"categories":["Themes"],"icon":"images/icon.png","galleryBanner":{"color":"#3c3836","theme":"dark"},"homepage":"https://github.com/jdinhify/vscode-theme-gruvbox","repository":{"type":"git","url":"https://github.com/jdinhify/vscode-theme-gruvbox.git"},"contributes":{"themes":[{"label":"Gruvbox Dark Medium","uiTheme":"vs-dark","path":"./themes/gruvbox-dark-medium.json"},{"label":"Gruvbox Dark Hard","uiTheme":"vs-dark","path":"./themes/gruvbox-dark-hard.json"},{"label":"Gruvbox Dark Soft","uiTheme":"vs-dark","path":"./themes/gruvbox-dark-soft.json"},{"label":"Gruvbox Light Medium","uiTheme":"vs","path":"./themes/gruvbox-light-medium.json"},{"label":"Gruvbox Light Hard","uiTheme":"vs","path":"./themes/gruvbox-light-hard.json"},{"label":"Gruvbox Light Soft","uiTheme":"vs","path":"./themes/gruvbox-light-soft.json"}]},"devDependencies":{"@semantic-release/changelog":"^5.0.1","@semantic-release/git":"^9.0.0","semantic-release":"^17.4.2","vsce":"^1.87.1"},"private":true,"scripts":{"semantic-release":"semantic-release"},"uuid":"c6d564c4-ca8c-45ba-abf6-c85f2d1468d8","isUserBuiltin":false,"isBuiltin":false,"isUnderDevelopment":false,"id":"jdinhlife.gruvbox","identifier":{"value":"jdinhlife.gruvbox","_lower":"jdinhlife.gruvbox"},"extensionLocation":{"$mid":1,"fsPath":"/home/ziggy/.vscode-oss/extensions/jdinhlife.gruvbox-1.5.0","path":"/home/ziggy/.vscode-oss/extensions/jdinhlife.gruvbox-1.5.0","scheme":"file"}},{"name":"glassit-linux","displayName":"GlassIt Linux","description":"Adds transparency to VSCode in Linux.","version":"1.0.0","publisher":"nowsci","engines":{"vscode":"^1.18.0"},"categories":["Other"],"activationEvents":["*"],"homepage":"https://github.com/Fmstrat/glassit-linux","repository":{"type":"git","url":"https://github.com/Fmstrat/glassit-linux.git"},"bugs":{"url":"https://github.com/Fmstrat/glassit-linux/issues"},"license":"SEE LICENSE IN 'LICENSE'","icon":"icon.png","main":"extension.js","contributes":{"configuration":[{"title":"GlassIt Linux","properties":{"glassit-linux.opacity":{"type":"integer","scope":"window","description":"Set to the percentage you wish windows to be opaque (requires restart)","default":97}}}]},"scripts":{"na-vscode:prepublish":"npm run compile","compile":"tsc -p ./","postinstall":"node ./node_modules/vscode/bin/install"},"devDependencies":{"@types/mocha":"^7.0.1","@types/node":"^7.0.43","typescript":"^3.7.5","vscode":"^1.1.6"},"uuid":"09e691bd-fdd0-4699-a932-7589178683e5","isUserBuiltin":false,"isBuiltin":false,"isUnderDevelopment":false,"id":"nowsci.glassit-linux","identifier":{"value":"nowsci.glassit-linux","_lower":"nowsci.glassit-linux"},"extensionLocation":{"$mid":1,"fsPath":"/home/ziggy/.vscode-oss/extensions/nowsci.glassit-linux-1.0.0","path":"/home/ziggy/.vscode-oss/extensions/nowsci.glassit-linux-1.0.0","scheme":"file"}},{"name":"vscode-quick-scope","displayName":"Vim quick-scope","description":"Highlights a unique character in each word so you can jump there with `f` and similar. Who needs EasyMotion?","version":"0.2.0","publisher":"skattyadz","engines":{"vscode":"^1.19.0"},"categories":["Other"],"keywords":["vim","quick-scope","quick","scope","jump"],"activationEvents":["*"],"main":"./out/extension","scripts":{"vscode:prepublish":"npm run compile","compile":"tsc -p ./","watch":"tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install","test":"npm run compile && node ./node_modules/vscode/bin/test"},"devDependencies":{"typescript":"^2.6.1","vscode":"^1.1.6","@types/node":"^7.0.43","@types/mocha":"^2.2.42"},"uuid":"db39be90-c16e-4953-9e51-08a2263cc656","isUserBuiltin":false,"isBuiltin":false,"isUnderDevelopment":false,"id":"skattyadz.vscode-quick-scope","identifier":{"value":"skattyadz.vscode-quick-scope","_lower":"skattyadz.vscode-quick-scope"},"extensionLocation":{"$mid":1,"fsPath":"/home/ziggy/.vscode-oss/extensions/skattyadz.vscode-quick-scope-0.2.0","path":"/home/ziggy/.vscode-oss/extensions/skattyadz.vscode-quick-scope-0.2.0","scheme":"file"}},{"name":"find-it-faster","displayName":"FindItFaster","publisher":"TomRijndorp","icon":"media/icon.png","repository":{"url":"https://github.com/tomrijndorp/vscode-finditfaster"},"description":"Find it, but faster! Leveraging fzf and rg.","keywords":["fuzzy","finder","fzf","rg","ripgrep","bat","batcat"],"version":"0.0.6","engines":{"vscode":"^1.56.0"},"categories":["Other"],"activationEvents":["onStartupFinished","onCommand:find-it-faster.findFiles","onCommand:find-it-faster.findWithinFiles"],"main":"./out/extension.js","contributes":{"commands":[{"command":"find-it-faster.findFiles","title":"Find It Faster: search file"},{"command":"find-it-faster.findWithinFiles","title":"Find It Faster: search within files"}],"keybindings":[{"command":"find-it-faster.findFiles","mac":"cmd+shift+j","linux":"ctrl+shift+j"},{"command":"find-it-faster.findWithinFiles","mac":"cmd+shift+u","linux":"ctrl+shift+u"}],"configuration":{"title":"FindItFaster","properties":{"find-it-faster.general.hideTerminalAfterSuccess":{"markdownDescription":"Extensions have limited control over the terminal panel. Ideally, it would be possible to automatically switch back to the previous thing you were doing (e.g. hide the terminal, show the terminal you're working on, show the tasks panel if that's what you were on), but we can't. Select here whether you want the terminal to be hidden or remain shown after invoking a command that fails / is canceled.","type":"boolean","default":true},"find-it-faster.general.hideTerminalAfterFail":{"markdownDescription":"Extensions have limited control over the terminal panel. Ideally, it would be possible to automatically switch back to the previous thing you were doing (e.g. hide the terminal, show the terminal you're working on, show the tasks panel if that's what you were on), but we can't. Select here whether you want the terminal to be hidden or remain shown after invoking a command that succeeds.","type":"boolean","default":true},"find-it-faster.general.clearTerminalAfterUse":{"markdownDescription":"Sends a 'clear' command after invoking a terminal command for a cleaner look","type":"boolean","default":true},"find-it-faster.general.showMaximizedTerminal":{"markdownDescription":"Show the terminal in full screen. Works especially nicely if you set the \"hide after succes / fail\" options in these preferences.","type":"boolean","default":false},"find-it-faster.general.useWorkspaceSearchExcludes":{"markdownDescription":"In order to speed up VS Code's native search functionality, you can use the `search.exclude` setting. If checked, this extension will honor the same exclude patterns (as long as they follow the standard \"gitignore glob style\" that `rg` uses.","type":"boolean","default":true},"find-it-faster.general.defaultSearchLocation":{"markdownDescription":"Search in this folder if you don't have any folders added to your workspace","type":"string","default":"~"},"find-it-faster.findFiles.showPreview":{"markdownDescription":"Show a preview window when searching files","type":"boolean","default":true},"find-it-faster.findFiles.previewCommand":{"markdownDescription":"When populated: Used by `fzf` to produce the preview. Use `{}` to indicate the filename. Example: `bat {}`.","type":"string","default":""},"find-it-faster.findFiles.previewWindowConfig":{"markdownDescription":"When populated: Used by `fzf` to determine position and look of the preview window. See the `fzf` documentation. Example for a horizontal split: `top,50%`.","type":"string","default":""},"find-it-faster.findWithinFiles.showPreview":{"markdownDescription":"Show a preview window when searching within files","type":"boolean","default":true},"find-it-faster.findWithinFiles.previewCommand":{"markdownDescription":"When populated: Used by `fzf` to produce the preview when searching within files. Use `{1}` to indicate the filename, `{2}` for the line number. Example using `cat` and `awk` instead of `bat`: `cat {1} | awk '{if (NR>={2}) print}'`.","type":"string","default":""},"find-it-faster.findWithinFiles.previewWindowConfig":{"markdownDescription":"When populated: Used by `fzf` to determine position and look of the preview window. See the `fzf` documentation. Example for a horizontal split: `top,50%,border-bottom,+{2}+3/3,~3`.","type":"string","default":""},"find-it-faster.advanced.disableStartupChecks":{"markdownDescription":"By default, we check that you have `fzf`, `rg`, and `bat` on your path. If you'd like to disable these checks because you're getting creative (e.g. use `cat` instead of `bat`), check this box. Obviously you may see errors on your terminal if we do call one of these programs when they are not present!","type":"boolean","default":false}}}},"scripts":{"vscode:prepublish":"npm run compile","compile":"tsc --noEmitOnError --strict -p ./","watch":"tsc -watch -p ./","pretest":"npm run compile && npm run lint","lint":"eslint src --ext ts","test":"node ./out/test/runTest.js","vscode:package":"vsce package --githubBranch main"},"devDependencies":{"@types/glob":"^7.1.3","@types/mocha":"^8.2.2","@types/node":"14.x","@types/vscode":"^1.56.0","@typescript-eslint/eslint-plugin":"^4.26.0","@typescript-eslint/parser":"^4.26.0","eslint":"^7.27.0","glob":"^7.1.7","mocha":"^8.4.0","typescript":"^4.3.2","vscode-test":"^1.5.2"},"uuid":"d5eafbee-176a-421a-b74d-fbc51bd86a21","isUserBuiltin":false,"isBuiltin":false,"isUnderDevelopment":false,"id":"TomRijndorp.find-it-faster","identifier":{"value":"TomRijndorp.find-it-faster","_lower":"tomrijndorp.find-it-faster"},"extensionLocation":{"$mid":1,"fsPath":"/home/ziggy/.vscode-oss/extensions/tomrijndorp.find-it-faster-0.0.6","path":"/home/ziggy/.vscode-oss/extensions/tomrijndorp.find-it-faster-0.0.6","scheme":"file"}},{"name":"find-then-jump","displayName":"Find Then Jump","description":"Vim Easymotion inspired code navigation.","version":"2.0.5","publisher":"tranhl","engines":{"vscode":"^1.30.0"},"categories":["Other"],"icon":"demo/icon.png","repository":{"type":"git","url":"https://github.com/tranhl/find-then-jump.git"},"activationEvents":["*"],"main":"./dist/extension.js","contributes":{"commands":[{"command":"findThenJump.initiate","title":"Find Then Jump"},{"command":"findThenJump.initiateWithSelection","title":"Find Then Jump With Selection"}],"colors":[{"id":"findThenJump.textDecorationForeground","description":"Foreground color of decorations that appear to the left of search term matches.","defaults":{"dark":"#FFF","light":"#FFF","highContrast":"#FFF"}},{"id":"findThenJump.textDecorationBackground","description":"Background color of decorations that appear to the left of search term matches.","defaults":{"dark":"#4169E1","light":"#4169E1","highContrast":"#4169E1"}}],"untrustedWorkspaces":{"supported":true}},"scripts":{"vscode:prepublish":"webpack --mode production","compile":"tsc -p ./","watch":"tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install","webpack":"webpack --mode development","webpack-dev":"webpack --mode development --watch","test":"npm run compile && node ./node_modules/vscode/bin/test","test-compile":"tsc -p ./"},"devDependencies":{"@types/mocha":"^2.2.42","@types/node":"^8.10.25","ts-loader":"^7.0.0","typescript":"^2.6.1","vscode":"^1.1.37","webpack":"^4.42.1","webpack-cli":"^3.3.11"},"dependencies":{"@types/ramda":"^0.25.47","ramda":"^0.26.1"},"uuid":"29cc2937-3cbb-4919-92f5-2b79bdee4db3","isUserBuiltin":false,"isBuiltin":false,"isUnderDevelopment":false,"id":"tranhl.find-then-jump","identifier":{"value":"tranhl.find-then-jump","_lower":"tranhl.find-then-jump"},"extensionLocation":{"$mid":1,"fsPath":"/home/ziggy/.vscode-oss/extensions/tranhl.find-then-jump-2.0.5","path":"/home/ziggy/.vscode-oss/extensions/tranhl.find-then-jump-2.0.5","scheme":"file"}},{"name":"vim","displayName":"Vim","description":"Vim emulation for Visual Studio Code","icon":"images/icon.png","version":"1.21.3","publisher":"vscodevim","galleryBanner":{"color":"#e3f4ff","theme":"light"},"license":"MIT","keywords":["vim","vi","vscodevim"],"repository":{"type":"git","url":"https://github.com/VSCodeVim/Vim.git"},"homepage":"https://github.com/VSCodeVim/Vim","bugs":{"url":"https://github.com/VSCodeVim/Vim/issues"},"engines":{"vscode":"^1.42.0"},"categories":["Other","Keymaps"],"extensionKind":["ui","web","workspace"],"sideEffects":false,"activationEvents":["*","onCommand:type"],"qna":"https://vscodevim.herokuapp.com/","main":"./out/extension","browser":"./out/extensionWeb","capabilities":{"untrustedWorkspaces":{"supported":true},"virtualWorkspaces":true},"contributes":{"commands":[{"command":"toggleVim","title":"Vim: Toggle Vim Mode"},{"command":"vim.showQuickpickCmdLine","title":"Vim: Show Command Line"},{"command":"vim.editVimrc","title":"Vim: Edit .vimrc"}],"keybindings":[{"key":"Escape","command":"extension.vim_escape","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"Escape","command":"notebook.cell.quitEdit","when":"inputFocus && notebookEditorFocused && !editorHasSelection && !editorHoverVisible && vim.active && vim.mode == 'Normal'"},{"key":"Home","command":"extension.vim_home","when":"editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"},{"key":"ctrl+home","command":"extension.vim_ctrl+home","when":"editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"},{"key":"End","command":"extension.vim_end","when":"editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"},{"key":"ctrl+end","command":"extension.vim_ctrl+end","when":"editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"},{"key":"Insert","command":"extension.vim_insert","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"Backspace","command":"extension.vim_backspace","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"Delete","command":"extension.vim_delete","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"tab","command":"extension.vim_tab","when":"editorFocus && vim.active && vim.mode != 'Insert' && !inDebugRepl"},{"key":"shift+tab","command":"extension.vim_shift+tab","when":"editorFocus && vim.active && vim.mode != 'Insert' && !inDebugRepl"},{"key":"left","command":"extension.vim_left","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"right","command":"extension.vim_right","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"up","command":"extension.vim_up","when":"editorTextFocus && vim.active && !inDebugRepl && !suggestWidgetVisible && !parameterHintsVisible"},{"key":"down","command":"extension.vim_down","when":"editorTextFocus && vim.active && !inDebugRepl && !suggestWidgetVisible && !parameterHintsVisible"},{"key":"g g","command":"list.focusFirst","when":"listFocus && !inputFocus"},{"key":"h","command":"list.collapse","when":"listFocus && !inputFocus"},{"key":"j","command":"list.focusDown","when":"listFocus && !inputFocus"},{"key":"k","command":"list.focusUp","when":"listFocus && !inputFocus"},{"key":"l","command":"list.select","when":"listFocus && !inputFocus"},{"key":"o","command":"list.toggleExpand","when":"listFocus && !inputFocus"},{"key":"/","command":"list.toggleKeyboardNavigation","when":"listFocus && !inputFocus && listSupportsKeyboardNavigation"},{"key":"ctrl+a","command":"extension.vim_ctrl+a","when":"editorTextFocus && vim.active && vim.use<C-a> && !inDebugRepl"},{"key":"ctrl+b","command":"extension.vim_ctrl+b","when":"editorTextFocus && vim.active && vim.use<C-b> && vim.mode != 'Insert' && !inDebugRepl"},{"key":"ctrl+c","command":"extension.vim_ctrl+c","when":"editorTextFocus && vim.active && vim.use<C-c> && !inDebugRepl && vim.overrideCtrlC"},{"key":"ctrl+d","command":"extension.vim_ctrl+d","when":"editorTextFocus && vim.active && vim.use<C-d> && !inDebugRepl"},{"key":"ctrl+d","command":"list.focusPageDown","when":"listFocus && !inputFocus"},{"key":"ctrl+e","command":"extension.vim_ctrl+e","when":"editorTextFocus && vim.active && vim.use<C-e> && !inDebugRepl"},{"key":"ctrl+f","command":"extension.vim_ctrl+f","when":"editorTextFocus && vim.active && vim.use<C-f> && vim.mode != 'Insert' && !inDebugRepl"},{"key":"ctrl+g","command":"extension.vim_ctrl+g","when":"editorTextFocus && vim.active && vim.use<C-g> && !inDebugRepl"},{"key":"ctrl+h","command":"extension.vim_ctrl+h","when":"editorTextFocus && vim.active && vim.use<C-h> && !inDebugRepl"},{"key":"ctrl+i","command":"extension.vim_ctrl+i","when":"editorTextFocus && vim.active && vim.use<C-i> && !inDebugRepl"},{"key":"ctrl+j","command":"extension.vim_ctrl+j","when":"editorTextFocus && vim.active && vim.use<C-j> && !inDebugRepl"},{"key":"ctrl+k","command":"extension.vim_ctrl+k","when":"editorTextFocus && vim.active && vim.use<C-k> && !inDebugRepl"},{"key":"ctrl+l","command":"extension.vim_navigateCtrlL","when":"editorTextFocus && vim.active && vim.use<C-l> && !inDebugRepl"},{"key":"ctrl+m","command":"extension.vim_ctrl+m","when":"editorTextFocus && vim.active && vim.use<C-m> && !inDebugRepl || vim.mode == 'CommandlineInProgress' && vim.active && vim.use<C-m> && !inDebugRepl || vim.mode == 'SearchInProgressMode' && vim.active && vim.use<C-m> && !inDebugRepl"},{"key":"ctrl+n","command":"extension.vim_ctrl+n","when":"editorTextFocus && vim.active && vim.use<C-n> && !inDebugRepl || vim.mode == 'CommandlineInProgress' && vim.active && vim.use<C-n> && !inDebugRepl || vim.mode == 'SearchInProgressMode' && vim.active && vim.use<C-n> && !inDebugRepl"},{"key":"ctrl+o","command":"extension.vim_ctrl+o","when":"editorTextFocus && vim.active && vim.use<C-o> && !inDebugRepl"},{"key":"ctrl+p","command":"extension.vim_ctrl+p","when":"suggestWidgetVisible && vim.active && vim.use<C-p> && !inDebugRepl || vim.mode == 'CommandlineInProgress' && vim.active && vim.use<C-p> && !inDebugRepl || vim.mode == 'SearchInProgressMode' && vim.active && vim.use<C-p> && !inDebugRepl"},{"key":"ctrl+q","command":"extension.vim_winCtrlQ","when":"editorTextFocus && vim.active && vim.use<C-q> && !inDebugRepl"},{"key":"ctrl+r","command":"extension.vim_ctrl+r","when":"editorTextFocus && vim.active && vim.use<C-r> && !inDebugRepl"},{"key":"ctrl+t","command":"extension.vim_ctrl+t","when":"editorTextFocus && vim.active && vim.use<C-t> && !inDebugRepl"},{"key":"ctrl+u","command":"extension.vim_ctrl+u","when":"editorTextFocus && vim.active && vim.use<C-u> && !inDebugRepl"},{"key":"ctrl+u","command":"list.focusPageUp","when":"listFocus && !inputFocus"},{"key":"ctrl+v","command":"extension.vim_ctrl+v","when":"editorTextFocus && vim.active && vim.use<C-v> && !inDebugRepl"},{"key":"ctrl+w","command":"extension.vim_ctrl+w","when":"editorTextFocus && vim.active && vim.use<C-w> && !inDebugRepl"},{"key":"ctrl+x","command":"extension.vim_ctrl+x","when":"editorTextFocus && vim.active && vim.use<C-x> && !inDebugRepl"},{"key":"ctrl+y","command":"extension.vim_ctrl+y","when":"editorTextFocus && vim.active && vim.use<C-y> && !inDebugRepl"},{"key":"ctrl+6","command":"extension.vim_ctrl+6","when":"editorTextFocus && vim.active && vim.use<C-6> && !inDebugRepl"},{"key":"ctrl+^","command":"extension.vim_ctrl+^","when":"editorTextFocus && vim.active && vim.use<C-^> && !inDebugRepl"},{"key":"ctrl+[","command":"extension.vim_ctrl+[","when":"editorTextFocus && vim.active && vim.use<C-[> && !inDebugRepl"},{"key":"ctrl+]","command":"extension.vim_ctrl+]","when":"editorTextFocus && vim.active && vim.use<C-]> && !inDebugRepl"},{"key":"ctrl+shift+2","command":"extension.vim_ctrl+shift+2","when":"editorTextFocus && vim.active && vim.use<C-shift+2>"},{"key":"ctrl+up","command":"extension.vim_ctrl+up","when":"editorTextFocus && vim.active && vim.mode != 'Insert' && !inDebugRepl"},{"key":"ctrl+down","command":"extension.vim_ctrl+down","when":"editorTextFocus && vim.active && vim.mode != 'Insert' && !inDebugRepl"},{"key":"ctrl+left","command":"extension.vim_ctrl+left","when":"editorTextFocus && vim.active && vim.mode != 'Insert' && !inDebugRepl"},{"key":"ctrl+right","command":"extension.vim_ctrl+right","when":"editorTextFocus && vim.active && vim.mode != 'Insert' && !inDebugRepl"},{"key":"ctrl+pagedown","command":"extension.vim_ctrl+pagedown","when":"editorTextFocus && vim.active && vim.use<C-pagedown> && !inDebugRepl"},{"key":"ctrl+pageup","command":"extension.vim_ctrl+pageup","when":"editorTextFocus && vim.active && vim.use<C-pageup> && !inDebugRepl"},{"key":"ctrl+space","command":"extension.vim_ctrl+space","when":"editorTextFocus && vim.active && vim.use<C-space> && !inDebugRepl && vim.mode != 'Insert'"},{"key":"shift+G","command":"list.focusLast","when":"listFocus && !inputFocus"},{"key":"ctrl+backspace","command":"extension.vim_ctrl+backspace","when":"editorTextFocus && vim.active && vim.use<C-BS> && vim.mode != 'Insert' && !inDebugRepl"},{"key":"shift+backspace","command":"extension.vim_shift+backspace","when":"editorTextFocus && vim.active && vim.use<S-BS> && vim.mode != 'Insert' && !inDebugRepl"},{"key":"cmd+left","command":"extension.vim_cmd+left","when":"editorTextFocus && vim.active && vim.use<D-left> && !inDebugRepl && vim.mode != 'Insert'"},{"key":"cmd+right","command":"extension.vim_cmd+right","when":"editorTextFocus && vim.active && vim.use<D-right> && !inDebugRepl && vim.mode != 'Insert'"},{"key":"cmd+a","command":"extension.vim_cmd+a","when":"editorTextFocus && vim.active && vim.use<D-a> && !inDebugRepl && vim.mode != 'Insert'"},{"key":"cmd+c","command":"extension.vim_cmd+c","when":"editorTextFocus && vim.active && vim.use<D-c> && vim.overrideCopy && !inDebugRepl"},{"key":"cmd+d","command":"extension.vim_cmd+d","when":"editorTextFocus && vim.active && vim.use<D-d> && !inDebugRepl"},{"key":"cmd+v","command":"extension.vim_cmd+v","when":"editorTextFocus && vim.active && vim.use<D-v> && vim.mode == 'CommandlineInProgress' !inDebugRepl || editorTextFocus && vim.active && vim.use<D-v> && vim.mode == 'SearchInProgressMode' && !inDebugRepl"},{"key":"ctrl+alt+down","linux":"shift+alt+down","mac":"cmd+alt+down","command":"extension.vim_cmd+alt+down","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"ctrl+alt+up","linux":"shift+alt+up","mac":"cmd+alt+up","command":"extension.vim_cmd+alt+up","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"j","command":"notebook.focusNextEditor","when":"vim.mode == 'Normal' && editorTextFocus && inputFocus && notebookEditorFocused && notebookEditorCursorAtBoundary != 'none' && notebookEditorCursorAtBoundary != 'top'"},{"key":"k","command":"notebook.focusPreviousEditor","when":"vim.mode == 'Normal' && editorTextFocus && inputFocus && notebookEditorFocused && notebookEditorCursorAtBoundary != 'bottom' && notebookEditorCursorAtBoundary != 'none'"}],"configuration":{"title":"Vim","type":"object","properties":{"vim.debug.silent":{"type":"boolean","description":"If true, all logs are suppressed.","default":false},"vim.debug.loggingLevelForAlert":{"type":"string","description":"Maximum level of messages to present as VS Code information window.","default":"error","enum":["error","warn","info","verbose","debug"]},"vim.debug.loggingLevelForConsole":{"type":"string","description":"Maximum level of messages to log to console. Logs are visible in developer tools.","default":"error","enum":["error","warn","info","verbose","debug"]},"vim.normalModeKeyBindings":{"type":"array","markdownDescription":"Remapped keys in Normal mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.normalModeKeyBindingsNonRecursive":{"type":"array","markdownDescription":"Non-recursive remapped keys in Normal mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.operatorPendingModeKeyBindings":{"type":"array","markdownDescription":"Remapped keys in OperatorPending mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.operatorPendingModeKeyBindingsNonRecursive":{"type":"array","markdownDescription":"Non-recursive remapped keys in OperatorPending mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.useCtrlKeys":{"type":"boolean","markdownDescription":"Enable some Vim Ctrl key commands that override otherwise common operations, like `Ctrl+C`.","default":true},"vim.leader":{"type":"string","markdownDescription":"What key should `<leader>` map to in remappings?","default":"\\"},"vim.searchHighlightColor":{"type":"string","description":"Color of the search highlight."},"vim.searchHighlightTextColor":{"type":"string","description":"Color of the search highlight text."},"vim.highlightedyank.enable":{"type":"boolean","description":"Enable highlighting when yanking.","default":false},"vim.highlightedyank.color":{"type":"string","description":"Color of the yank highlight.","default":"rgba(250, 240, 170, 0.5)"},"vim.highlightedyank.textColor":{"type":"string","description":"Color of the yank highlight text."},"vim.highlightedyank.duration":{"type":"number","description":"Duration in milliseconds of the yank highlight.","default":200,"minimum":1},"vim.useSystemClipboard":{"type":"boolean","description":"Use system clipboard for unnamed register.","default":false},"vim.overrideCopy":{"type":"boolean","description":"Override VS Code's copy command with our own copy command, which works better with VSCodeVim. Turn this off if copying is not working.","default":true},"vim.insertModeKeyBindings":{"type":"array","markdownDescription":"Remapped keys in Insert mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.insertModeKeyBindingsNonRecursive":{"type":"array","markdownDescription":"Non-recursive keybinding overrides to use for Insert mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.visualModeKeyBindings":{"type":"array","markdownDescription":"Remapped keys in Visual mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.visualModeKeyBindingsNonRecursive":{"type":"array","markdownDescription":"Non-recursive keybinding overrides to use for Visual mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.commandLineModeKeyBindings":{"type":"array","markdownDescription":"Remapped keys in command line mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.commandLineModeKeyBindingsNonRecursive":{"type":"array","markdownDescription":"Non-recursive keybinding overrides to use for command line mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.textwidth":{"type":"number","markdownDescription":"Width to word-wrap to when using `gq`.","default":80,"minimum":1},"vim.timeout":{"type":"number","description":"Timeout in milliseconds for remapped commands.","default":1000,"minimum":0},"vim.maxmapdepth":{"type":"number","description":"Maximum number of times a mapping is done without resulting in a character to be used.","default":1000,"minimum":0},"vim.scroll":{"type":"number","markdownDescription":"Number of lines to scroll with `Ctrl-U` and `Ctrl-D` commands. Set to 0 to use a half page scroll.","default":0,"minimum":0},"vim.showcmd":{"type":"boolean","description":"Show the text of any command you are in the middle of writing.","default":true},"vim.showmodename":{"type":"boolean","description":"Show the name of the current mode in the statusbar.","default":true},"vim.iskeyword":{"type":"string","markdownDescription":"Keywords contain alphanumeric characters and '_'. If not configured, `#editor.wordSeparators#` is used."},"vim.ignorecase":{"type":"boolean","description":"Ignore case in search patterns.","default":true},"vim.smartcase":{"type":"boolean","markdownDescription":"Override the `ignorecase` option if the search pattern contains upper case characters.","default":true},"vim.camelCaseMotion.enable":{"type":"boolean","markdownDescription":"Enable the [CamelCaseMotion](https://github.com/bkad/CamelCaseMotion) plugin for Vim.","default":false},"vim.easymotion":{"type":"boolean","markdownDescription":"Enable the [EasyMotion](https://github.com/easymotion/vim-easymotion) plugin for Vim.","default":false},"vim.easymotionMarkerBackgroundColor":{"type":"string","default":"#0000","description":"Set a custom background color for EasyMotion markers."},"vim.easymotionMarkerForegroundColorOneChar":{"type":"string","default":"#ff0000","description":"Set a custom color for the text on one character long markers."},"vim.easymotionMarkerForegroundColorTwoChar":{"type":"string","description":"Set a custom color for the text on two character long markers.","markdownDeprecationMessage":"**Deprecated**: Please don't use this setting, use `#vim.easymotionMarkerForegroundColorTwoCharFirst#` and `#vim.easymotionMarkerForegroundColorTwoCharSecond#` instead.","deprecationMessage":"Deprecated: Please don't use this setting, use `#vim.easymotionMarkerForegroundColorTwoCharFirst#` and `#vim.easymotionMarkerForegroundColorTwoCharSecond#` instead."},"vim.easymotionMarkerForegroundColorTwoCharFirst":{"type":"string","default":"#ffb400","description":"Set a custom color for the first character on two character long markers."},"vim.easymotionMarkerForegroundColorTwoCharSecond":{"type":"string","default":"#b98300","description":"Set a custom color for the second character on two character long markers."},"vim.easymotionIncSearchForegroundColor":{"type":"string","default":"#7fbf00","description":"Set a custom color for the easymotion search n-character (default `<leader><leader>/`)."},"vim.easymotionDimColor":{"type":"string","default":"#777777","description":"Set a custom color for the easymotion dimmed characters when `#vim.easymotionDimBackground#` is set to true."},"vim.easymotionMarkerWidthPerChar":{"type":"number","description":"Set the width (in pixels) allocated to each character in the match.","default":8,"minimum":1,"markdownDeprecationMessage":"**Deprecated**: Please don't use this setting; the extension now lets vscode calculate the correct width.","deprecationMessage":"Deprecated: Please don't use this setting; the extension now lets vscode calculate the correct width."},"vim.easymotionDimBackground":{"type":"boolean","description":"Whether to dim other text while markers are visible.","default":true},"vim.easymotionMarkerFontFamily":{"type":"string","description":"Set the font family of the marker text.","default":"","markdownDeprecationMessage":"**Deprecated**: Please don't use this setting; the extension now uses `#editor.fontFamily#` instead.","deprecationMessage":"Deprecated: Please don't use this setting; the extension now uses editor.fontFamily instead."},"vim.easymotionMarkerFontSize":{"type":"string","description":"Set the font size of the marker text.","default":"","markdownDeprecationMessage":"**Deprecated**: Please don't use this setting; the extension now uses `#editor.fontSize#` instead.","deprecationMessage":"Deprecated: Please don't use this setting; the extension now uses editor.fontSize instead."},"vim.easymotionMarkerFontWeight":{"type":"string","description":"Set the font weight of the marker text.","default":"bold"},"vim.easymotionMarkerMargin":{"type":"number","description":"Set the margin around each marker, in pixels.","default":0,"markdownDeprecationMessage":"**Deprecated**: Please don't use this setting, it is no longer required.","deprecationMessage":"Deprecated: Please don't use this setting, it is no longer required."},"vim.easymotionKeys":{"type":"string","description":"Set the characters used for jump marker name.","default":"hklyuiopnm,qwertzxcvbasdgjf;"},"vim.easymotionJumpToAnywhereRegex":{"type":"string","description":"Regex matches for JumpToAnywhere motion.","default":"\\b[A-Za-z0-9]|[A-Za-z0-9]\\b|_.|#.|[a-z][A-Z]"},"vim.replaceWithRegister":{"type":"boolean","markdownDescription":"Enable the [ReplaceWithRegister](https://github.com/vim-scripts/ReplaceWithRegister) plugin for Vim.","default":false},"vim.smartRelativeLine":{"type":"boolean","markdownDescription":"`#editor.lineNumbers#` is determined by the active Vim mode, absolute when in insert mode, relative otherwise.","default":false},"vim.sneak":{"type":"boolean","markdownDescription":"Enable the [Sneak](https://github.com/justinmk/vim-sneak) plugin for Vim.","default":false},"vim.sneakUseIgnorecaseAndSmartcase":{"type":"boolean","markdownDescription":"Case sensitivity is determined by `#vim.ignorecase#` and `#vim.smartcase#`.","default":false},"vim.sneakReplacesF":{"type":"boolean","markdownDescription":"Use single-character [Sneak](https://github.com/justinmk/vim-sneak) instead of Vim's native `f`.","default":false},"vim.surround":{"type":"boolean","markdownDescription":"Enable the [Surround](https://github.com/tpope/vim-surround) plugin for Vim.","default":true},"vim.argumentObjectSeparators":{"type":"array","items":{"type":"string"},"markdownDescription":"Set separators for the argument text object.","default":[","]},"vim.argumentObjectOpeningDelimiters":{"type":"array","items":{"type":"string"},"markdownDescription":"Set opening delimiters for the argument text object.","default":["(","["]},"vim.argumentObjectClosingDelimiters":{"type":"array","items":{"type":"string"},"markdownDescription":"Set closing delimiters for the argument text object.","default":[")","]"]},"vim.hlsearch":{"type":"boolean","description":"Show all matches of the most recent search pattern.","default":false},"vim.incsearch":{"type":"boolean","markdownDescription":"Show where a `/` or `?` search matches as you type it.","default":true},"vim.history":{"type":"number","description":"How much search or command history should be remembered.","default":50,"minimum":1},"vim.autoindent":{"type":"boolean","description":"Indent code automatically.","default":true},"vim.joinspaces":{"type":"boolean","description":"Add two spaces after '.', '?', and '!' when joining or reformatting.","default":true},"vim.startInInsertMode":{"type":"boolean","description":"Start in Insert mode."},"vim.handleKeys":{"type":"object","description":"Delegate certain key combinations back to VSCode to be handled natively.","default":{"<C-d>":true}},"vim.statusBarColorControl":{"type":"boolean","markdownDescription":"Allow VSCodeVim to change status bar color based on mode. **NOTE:** Using this feature will have a negative impact on performance.","default":false},"vim.statusBarColors.normal":{"type":["string","array"],"description":"Status bar color when in Normal mode.","default":"#005f5f"},"vim.statusBarColors.insert":{"type":["string","array"],"description":"Status bar color when in Insert mode.","default":"#5f0000"},"vim.statusBarColors.visual":{"type":["string","array"],"description":"Status bar color when in Visual mode.","default":"#5f00af"},"vim.statusBarColors.visualline":{"type":["string","array"],"description":"Status bar color when in VisualLine mode.","default":"#005f5f"},"vim.statusBarColors.visualblock":{"type":["string","array"],"description":"Status bar color when in VisualBlock mode.","default":"#86592d"},"vim.statusBarColors.replace":{"type":["string","array"],"description":"Status bar color when in Replace mode.","default":"#00000"},"vim.statusBarColors.commandlineinprogress":{"type":["string","array"],"description":"Status bar color when in CommandLineInProgress mode.","default":"#007acc"},"vim.statusBarColors.searchinprogressmode":{"type":["string","array"],"description":"Status bar color when in SearchInProgress mode.","default":"#007acc"},"vim.statusBarColors.easymotionmode":{"type":["string","array"],"description":"Status bar color when in EasyMotion mode.","default":"#007acc"},"vim.statusBarColors.easymotioninputmode":{"type":["string","array"],"description":"Status bar color when in EasyMotionInput mode.","default":"#007acc"},"vim.statusBarColors.surroundinputmode":{"type":["string","array"],"description":"Status bar color when in SurroundInput mode.","default":"#007acc"},"vim.visualstar":{"type":"boolean","markdownDescription":"In Visual mode, start a search with `*` or `#` using the current selection.","default":false},"vim.changeWordIncludesWhitespace":{"type":"boolean","description":"Includes trailing whitespace when changing word.","default":false},"vim.foldfix":{"type":"boolean","description":"Uses a hack to move around folds properly.","default":false},"vim.mouseSelectionGoesIntoVisualMode":{"type":"boolean","description":"If enabled, dragging with the mouse activates Visual mode.","default":true},"vim.disableExtension":{"type":"boolean","description":"Disables the VSCodeVim extension. The extension will continue to be loaded and activated, but Vim functionality will be disabled.","default":false},"vim.enableNeovim":{"type":"boolean","markdownDescription":"Use Neovim to execute Ex commands. You should restart VS Code after enabling/disabling this for the changes to take effect. **NOTE:** Neovim version 0.2.0 or greater must be installed, and if the executable is not on your PATH, `#vim.neovimPath#` must be set.","default":false},"vim.neovimPath":{"type":"string","markdownDescription":"Path to Neovim executable. For example, `/usr/bin/nvim`, or  `C:\\Program Files\\Neovim\\bin\\nvim.exe`.","default":"","scope":"machine"},"vim.neovimUseConfigFile":{"type":"boolean","markdownDescription":"Use a config file for Neovim, specified by `vim.neovimConfigPath`.","default":false},"vim.neovimConfigPath":{"type":"string","markdownDescription":"Path to Neovim configuration file. `vim.neovimUseConfigFile` must be enabled. If path is left blank, Neovim will use its default config path, i.e. `~/.config/nvim/init.vim` or 'C:\\Users\\USERNAME\\AppData\\Local\\nvim\\init.vim'.","default":"","scope":"machine"},"vim.vimrc.enable":{"type":"boolean","markdownDescription":"Use key mappings from a `.vimrc` file.","default":false},"vim.vimrc.path":{"type":"string","markdownDescription":"Path to a Vim configuration file. If unset, it will check for `$HOME/.vimrc`, `$HOME/_vimrc`, and `$HOME/.config/nvim/init.vim`, in that order."},"vim.substituteGlobalFlag":{"type":"boolean","markdownDescription":"Automatically apply the global flag, `/g`, to substitute commands. When set to true, use `/g` to mean only first match should be replaced.","default":false,"markdownDeprecationMessage":"**Deprecated**: Please use `#vim.gdefault#` instead.","deprecationMessage":"Deprecated: Please use vim.gdefault instead."},"vim.gdefault":{"type":"boolean","markdownDescription":"Automatically apply the global flag, `/g`, to substitute commands. When set to true, use `/g` to mean only first match should be replaced.","default":false},"vim.cursorStylePerMode.normal":{"type":"string","description":"Cursor style for Normal mode.","enum":["","block","block-outline","line","line-thin","underline","underline-thin"]},"vim.cursorStylePerMode.insert":{"type":"string","description":"Cursor style for Insert mode.","enum":["","block","block-outline","line","line-thin","underline","underline-thin"]},"vim.cursorStylePerMode.replace":{"type":"string","description":"Cursor style for Replace mode.","enum":["","block","block-outline","line","line-thin","underline","underline-thin"]},"vim.cursorStylePerMode.visual":{"type":"string","description":"Cursor style for Visual mode.","enum":["","block","block-outline","line","line-thin","underline","underline-thin"]},"vim.cursorStylePerMode.visualline":{"type":"string","description":"Cursor style for VisualLine mode.","enum":["","block","block-outline","line","line-thin","underline","underline-thin"]},"vim.cursorStylePerMode.visualblock":{"type":"string","description":"Cursor style for VisualBlock mode.","enum":["","block","block-outline","line","line-thin","underline","underline-thin"]},"vim.autoSwitchInputMethod.enable":{"type":"boolean","description":"If enabled, the input method switches automatically when the mode changes.","default":false},"vim.autoSwitchInputMethod.defaultIM":{"type":"string","markdownDescription":"The input method for your normal mode, find more information [here](https://github.com/VSCodeVim/Vim#input-method).","default":""},"vim.autoSwitchInputMethod.switchIMCmd":{"type":"string","description":"The shell command to switch input method.","default":"/path/to/im-select {im}"},"vim.autoSwitchInputMethod.obtainIMCmd":{"type":"string","description":"The shell command to get current input method.","default":"/path/to/im-select"},"vim.whichwrap":{"type":"string","description":"Comma-separated list of motion keys that should wrap to next/previous line.","default":"b,s"},"vim.report":{"type":"number","description":"Threshold for reporting number of lines changed.","default":2,"minimum":1},"vim.digraphs":{"type":"object","description":"Custom digraph shortcuts for inserting special characters, expressed as UTF16 code points.","default":{}},"vim.wrapscan":{"type":"boolean","description":"Searches wrap around the end of the file.","default":true},"vim.startofline":{"type":"boolean","markdownDescription":"When `true` the commands listed below move the cursor to the first non-blank of the line.  When `false` the cursor is kept in the same column (if possible).  This applies to the commands: `<C-d>`, `<C-u>`, `<C-b>`, `<C-f>`, `G`, `H`, `M`, `L`, `gg`, and to the commands `d`, `<<` and `>>` with a linewise operator.","default":true},"vim.showMarksInGutter":{"type":"boolean","description":"Show the currently set mark(s) in the gutter.","default":false}}},"languages":[{"id":"vimrc","extensions":[".vimrc"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"vimrc","scopeName":"source.vimrc","path":"./syntaxes/vimrc.tmLanguage.json"}]},"scripts":{"vscode:prepublish":"gulp build","build":"gulp build","test":"node ./out/test/runTest.js","forceprettier":"gulp forceprettier"},"dependencies":{"diff-match-patch":"1.0.5","lodash":"^4.17.21","neovim":"4.10.0","path-browserify":"1.0.1","queue":"^6.0.2","source-map-support":"0.5.19","untildify":"4.0.0","winston":"3.3.3","winston-console-for-electron":"0.0.6","winston-transport":"4.4.0"},"devDependencies":{"@types/diff":"5.0.0","@types/diff-match-patch":"1.0.32","@types/glob":"7.1.3","@types/lodash":"4.14.170","@types/mocha":"8.2.2","@types/node":"12.20.15","@types/sinon":"10.0.2","@types/source-map-support":"0.5.3","@types/vscode":"1.42.0","clean-webpack-plugin":"3.0.0","event-stream":"4.0.1","fork-ts-checker-webpack-plugin":"6.2.10","gulp":"4.0.2","gulp-bump":"3.2.0","gulp-git":"2.10.1","gulp-sourcemaps":"3.0.0","gulp-tag-version":"1.3.1","gulp-tslint":"8.1.4","gulp-typescript":"5.0.1","minimist":"1.2.5","mocha":"9.0.0","plugin-error":"1.0.1","prettier":"2.3.1","sinon":"11.1.1","ts-loader":"9.2.3","tslint":"6.1.3","typescript":"4.3.4","vsce":"1.93.0","vscode-test":"1.5.2","webpack":"5.39.1","webpack-cli":"4.7.2","webpack-merge":"5.8.0","webpack-stream":"6.1.2"},"uuid":"d96e79c6-8b25-4be3-8545-0e0ecefcae03","isUserBuiltin":false,"isBuiltin":false,"isUnderDevelopment":false,"id":"vscodevim.vim","identifier":{"value":"vscodevim.vim","_lower":"vscodevim.vim"},"extensionLocation":{"$mid":1,"fsPath":"/home/ziggy/.vscode-oss/extensions/vscodevim.vim-1.21.3","path":"/home/ziggy/.vscode-oss/extensions/vscodevim.vim-1.21.3","scheme":"file"}}]}